{
  "frontend/src/components/common/Layout.tsx": "import React, { ReactNode } from 'react'\nimport { useRouter } from 'next/router'\nimport { useAuth } from '@/hooks/useAuth'\nimport Header from './Header'\nimport Sidebar from './Sidebar'\nimport Loading from './Loading'\n\ninterface LayoutProps {\n  children: ReactNode\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const router = useRouter()\n  const { user, loading } = useAuth()\n\n  const isAuthPage = ['/login', '/register'].includes(router.pathname)\n\n  if (loading) {\n    return <Loading />\n  }\n\n  if (isAuthPage) {\n    return <>{children}</>\n  }\n\n  if (!user) {\n    return <>{children}</>\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 dir-rtl\">\n      <Header />\n      <div className=\"flex\">\n        <Sidebar />\n        <main className=\"flex-1 p-4 lg:p-6 lg:mr-64\">\n          <div className=\"max-w-7xl mx-auto\">\n            {children}\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout",
  "frontend/src/components/common/Header.tsx": "import React, { useState } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { useAuth } from '@/hooks/useAuth'\nimport { useTheme } from '@/contexts/ThemeContext'\nimport { \n  Bars3Icon, \n  XMarkIcon, \n  SunIcon, \n  MoonIcon,\n  BellIcon,\n  UserCircleIcon,\n  Cog6ToothIcon,\n  ArrowRightOnRectangleIcon\n} from '@heroicons/react/24/outline'\nimport toast from 'react-hot-toast'\n\nconst Header: React.FC = () => {\n  const router = useRouter()\n  const { user, logout } = useAuth()\n  const { theme, toggleTheme } = useTheme()\n  const [showUserMenu, setShowUserMenu] = useState(false)\n  const [showMobileMenu, setShowMobileMenu] = useState(false)\n\n  const handleLogout = async () => {\n    try {\n      await logout()\n      toast.success('با موفقیت خارج شدید')\n      router.push('/login')\n    } catch (error) {\n      toast.error('خطا در خروج')\n    }\n  }\n\n  return (\n    <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700 sticky top-0 z-50\">\n      <div className=\"px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Mobile menu button */}\n          <div className=\"lg:hidden\">\n            <button\n              onClick={() => setShowMobileMenu(!showMobileMenu)}\n              className=\"p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700\"\n            >\n              {showMobileMenu ? (\n                <XMarkIcon className=\"h-6 w-6\" />\n              ) : (\n                <Bars3Icon className=\"h-6 w-6\" />\n              )}\n            </button>\n          </div>\n\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <Link href=\"/dashboard\" className=\"flex items-center space-x-3 space-x-reverse\">\n              <div className=\"w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-sm\">ب</span>\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white hidden sm:block\">\n                برنامه‌ریزی دروس\n              </span>\n            </Link>\n          </div>\n\n          {/* Right side */}\n          <div className=\"flex items-center space-x-4 space-x-reverse\">\n            {/* Theme toggle */}\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700\"\n              title={theme === 'dark' ? 'حالت روز' : 'حالت شب'}\n            >\n              {theme === 'dark' ? (\n                <SunIcon className=\"h-5 w-5\" />\n              ) : (\n                <MoonIcon className=\"h-5 w-5\" />\n              )}\n            </button>\n\n            {/* Notifications */}\n            <button className=\"p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700 relative\">\n              <BellIcon className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-4 w-4 bg-red-500 rounded-full text-xs text-white flex items-center justify-center\">\n                3\n              </span>\n            </button>\n\n            {/* User menu */}\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowUserMenu(!showUserMenu)}\n                className=\"flex items-center space-x-2 space-x-reverse p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <UserCircleIcon className=\"h-8 w-8 text-gray-400\" />\n                <div className=\"hidden md:block text-right\">\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {user?.name}\n                  </div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    {user?.email}\n                  </div>\n                </div>\n              </button>\n\n              {/* User dropdown */}\n              {showUserMenu && (\n                <div className=\"absolute left-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 z-50\">\n                  <div className=\"py-1\">\n                    <Link\n                      href=\"/settings\"\n                      className=\"flex items-center px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                      onClick={() => setShowUserMenu(false)}\n                    >\n                      <Cog6ToothIcon className=\"ml-3 h-4 w-4\" />\n                      تنظیمات\n                    </Link>\n                    <button\n                      onClick={handleLogout}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50 dark:hover:bg-red-900\"\n                    >\n                      <ArrowRightOnRectangleIcon className=\"ml-3 h-4 w-4\" />\n                      خروج\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile menu overlay */}\n      {showMobileMenu && (\n        <div className=\"lg:hidden\">\n          <div className=\"fixed inset-0 z-40 bg-gray-600 bg-opacity-75\" onClick={() => setShowMobileMenu(false)} />\n          <div className=\"fixed inset-y-0 right-0 z-50 w-64 bg-white dark:bg-gray-800 shadow-xl\">\n            {/* Mobile menu content would go here */}\n          </div>\n        </div>\n      )}\n    </header>\n  )\n}\n\nexport default Header",
  "frontend/src/components/common/Sidebar.tsx": "import React from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { \n  HomeIcon,\n  CalendarDaysIcon,\n  BookOpenIcon,\n  ChartBarIcon,\n  Cog6ToothIcon,\n  DocumentArrowDownIcon,\n  ExclamationTriangleIcon\n} from '@heroicons/react/24/outline'\nimport classNames from 'classnames'\n\nconst navigation = [\n  { name: 'داشبورد', href: '/dashboard', icon: HomeIcon },\n  { name: 'برنامه‌ها', href: '/schedules', icon: CalendarDaysIcon },\n  { name: 'دروس', href: '/courses', icon: BookOpenIcon },\n  { name: 'گزارش‌ها', href: '/reports', icon: ChartBarIcon },\n  { name: 'واردات/صادرات', href: '/import-export', icon: DocumentArrowDownIcon },\n  { name: 'تنظیمات', href: '/settings', icon: Cog6ToothIcon },\n]\n\nconst Sidebar: React.FC = () => {\n  const router = useRouter()\n\n  return (\n    <div className=\"hidden lg:flex lg:flex-shrink-0\">\n      <div className=\"flex flex-col w-64\">\n        <div className=\"flex flex-col h-0 flex-1 bg-white dark:bg-gray-800 border-l border-gray-200 dark:border-gray-700\">\n          <div className=\"flex-1 flex flex-col pt-5 pb-4 overflow-y-auto\">\n            <nav className=\"mt-5 flex-1 px-2 space-y-1\">\n              {navigation.map((item) => {\n                const isActive = router.pathname === item.href || \n                  (item.href !== '/dashboard' && router.pathname.startsWith(item.href))\n\n                return (\n                  <Link\n                    key={item.name}\n                    href={item.href}\n                    className={classNames(\n                      isActive\n                        ? 'bg-primary-50 dark:bg-primary-900 border-primary-500 text-primary-700 dark:text-primary-200'\n                        : 'border-transparent text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white',\n                      'group flex items-center px-3 py-2 text-sm font-medium border-r-4 rounded-md transition-colors duration-150'\n                    )}\n                  >\n                    <item.icon\n                      className={classNames(\n                        isActive ? 'text-primary-500' : 'text-gray-400 group-hover:text-gray-500',\n                        'ml-3 flex-shrink-0 h-5 w-5'\n                      )}\n                    />\n                    {item.name}\n                  </Link>\n                )\n              })}\n            </nav>\n          </div>\n\n          {/* Conflict indicator */}\n          <div className=\"flex-shrink-0 p-4\">\n            <div className=\"bg-yellow-50 dark:bg-yellow-900 border border-yellow-200 dark:border-yellow-700 rounded-md p-3\">\n              <div className=\"flex\">\n                <ExclamationTriangleIcon className=\"h-5 w-5 text-yellow-400\" />\n                <div className=\"mr-3\">\n                  <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n                    ۲ تداخل زمانی یافت شد\n                  </p>\n                  <p className=\"mt-1 text-xs text-yellow-600 dark:text-yellow-300\">\n                    <Link href=\"/conflicts\" className=\"hover:underline\">\n                      مشاهده جزئیات\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar",
  "frontend/src/components/common/Loading.tsx": "import React from 'react'\n\ninterface LoadingProps {\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  className?: string\n}\n\nconst Loading: React.FC<LoadingProps> = ({ \n  size = 'md',\n  text = 'در حال بارگذاری...',\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-8 w-8',\n    lg: 'h-12 w-12'\n  }\n\n  return (\n    <div className={`flex flex-col items-center justify-center p-8 ${className}`}>\n      <div className={`animate-spin rounded-full border-b-2 border-primary-600 ${sizeClasses[size]}`}></div>\n      {text && (\n        <p className=\"mt-4 text-sm text-gray-600 dark:text-gray-400 font-iran-sans\">\n          {text}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Loading",
  "frontend/src/components/common/Button.tsx": "import React, { ButtonHTMLAttributes, ReactNode } from 'react'\nimport classNames from 'classnames'\nimport Loading from './Loading'\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger'\n  size?: 'sm' | 'md' | 'lg'\n  loading?: boolean\n  icon?: ReactNode\n  children: ReactNode\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  icon,\n  children,\n  className = '',\n  disabled,\n  ...props\n}) => {\n  const baseClasses = 'inline-flex items-center justify-center font-medium rounded-md transition-colors duration-150 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed'\n\n  const variantClasses = {\n    primary: 'bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500',\n    secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',\n    outline: 'border border-gray-300 text-gray-700 bg-white hover:bg-gray-50 focus:ring-primary-500 dark:border-gray-600 dark:text-gray-300 dark:bg-gray-800 dark:hover:bg-gray-700',\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-primary-500 dark:text-gray-300 dark:hover:bg-gray-700',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500'\n  }\n\n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  }\n\n  return (\n    <button\n      className={classNames(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        className\n      )}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading ? (\n        <>\n          <Loading size=\"sm\" text=\"\" className=\"ml-2\" />\n          در حال پردازش...\n        </>\n      ) : (\n        <>\n          {icon && <span className=\"ml-2\">{icon}</span>}\n          {children}\n        </>\n      )}\n    </button>\n  )\n}\n\nexport default Button",
  "frontend/src/components/reports/Dashboard.tsx": "import React from 'react'\nimport Head from 'next/head'\nimport { useQuery } from '@tanstack/react-query'\nimport { \n  CalendarDaysIcon,\n  BookOpenIcon,\n  ClockIcon,\n  ExclamationTriangleIcon,\n  UserGroupIcon,\n  ChartBarIcon\n} from '@heroicons/react/24/outline'\nimport { useAuth } from '@/hooks/useAuth'\nimport { useSchedule } from '@/hooks/useSchedule'\nimport Loading from '@/components/common/Loading'\nimport StatCard from './StatCard'\nimport Chart from './Chart'\n\nconst Dashboard: React.FC = () => {\n  const { user } = useAuth()\n  const { activeSchedule, loading: scheduleLoading } = useSchedule()\n\n  const { data: stats, isLoading: statsLoading } = useQuery({\n    queryKey: ['dashboard-stats'],\n    queryFn: async () => {\n      // Fetch dashboard statistics\n      const response = await fetch('/api/reports/dashboard')\n      return response.json()\n    }\n  })\n\n  if (scheduleLoading || statsLoading) {\n    return <Loading text=\"در حال بارگذاری داشبورد...\" />\n  }\n\n  const quickStats = [\n    {\n      title: 'برنامه فعال',\n      value: activeSchedule?.name || 'انتخاب نشده',\n      icon: CalendarDaysIcon,\n      color: 'primary'\n    },\n    {\n      title: 'تعداد دروس',\n      value: activeSchedule?.courses?.length || 0,\n      icon: BookOpenIcon,  \n      color: 'success'\n    },\n    {\n      title: 'مجموع واحدها',\n      value: activeSchedule?.totalCredits || 0,\n      icon: ChartBarIcon,\n      color: 'info'\n    },\n    {\n      title: 'ساعات کلاس',\n      value: calculateClassHours(activeSchedule?.courses || []),\n      icon: ClockIcon,\n      color: 'warning'\n    },\n    {\n      title: 'تداخل‌ها',\n      value: stats?.conflicts || 0,\n      icon: ExclamationTriangleIcon,\n      color: 'danger'\n    },\n    {\n      title: 'اساتید',\n      value: getUniqueInstructors(activeSchedule?.courses || []).length,\n      icon: UserGroupIcon,\n      color: 'secondary'\n    }\n  ]\n\n  return (\n    <>\n      <Head>\n        <title>داشبورد - سیستم برنامه‌ریزی دروس</title>\n      </Head>\n\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            خوش آمدید، {user?.name}\n          </h1>\n          <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">\n            نمای کلی برنامه درسی شما\n          </p>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4\">\n          {quickStats.map((stat, index) => (\n            <StatCard\n              key={index}\n              title={stat.title}\n              value={stat.value}\n              icon={stat.icon}\n              color={stat.color}\n            />\n          ))}\n        </div>\n\n        {/* Charts Row */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Weekly Schedule Chart */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n              برنامه هفتگی\n            </h3>\n            <Chart\n              type=\"bar\"\n              data={getWeeklyScheduleData(activeSchedule?.courses || [])}\n              height={300}\n            />\n          </div>\n\n          {/* Credits Distribution */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n              توزیع واحدها\n            </h3>\n            <Chart\n              type=\"pie\"\n              data={getCreditsDistribution(activeSchedule?.courses || [])}\n              height={300}\n            />\n          </div>\n        </div>\n\n        {/* Recent Activity & Quick Actions */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Recent Activity */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\n            <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                فعالیت‌های اخیر\n              </h3>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-start space-x-3 space-x-reverse\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2\"></div>\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\n                      درس \"ریاضی عمومی ۱\" اضافه شد\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      ۲ ساعت پیش\n                    </p>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-3 space-x-reverse\">\n                  <div className=\"w-2 h-2 bg-yellow-500 rounded-full mt-2\"></div>\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\n                      تداخل زمانی در روز دوشنبه شناسایی شد\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      ۵ ساعت پیش\n                    </p>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-3 space-x-reverse\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2\"></div>\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\n                      برنامه \"ترم پاییز ۱۴۰۳\" ایجاد شد\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      دیروز\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\n            <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                عملیات سریع\n              </h3>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <button className=\"p-4 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-center\">\n                  <BookOpenIcon className=\"h-8 w-8 text-primary-600 mx-auto mb-2\" />\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    افزودن درس\n                  </span>\n                </button>\n                <button className=\"p-4 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-center\">\n                  <CalendarDaysIcon className=\"h-8 w-8 text-primary-600 mx-auto mb-2\" />\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    برنامه جدید\n                  </span>\n                </button>\n                <button className=\"p-4 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-center\">\n                  <ExclamationTriangleIcon className=\"h-8 w-8 text-yellow-600 mx-auto mb-2\" />\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    بررسی تداخل\n                  </span>\n                </button>\n                <button className=\"p-4 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-center\">\n                  <ChartBarIcon className=\"h-8 w-8 text-primary-600 mx-auto mb-2\" />\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    گزارش‌ها\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n// Helper functions\nfunction calculateClassHours(courses: any[]): number {\n  return courses.reduce((total, course) => {\n    return total + course.timeSlots.reduce((courseTotal: number, slot: any) => {\n      const start = parseTime(slot.startTime)\n      const end = parseTime(slot.endTime)\n      return courseTotal + (end - start)\n    }, 0)\n  }, 0)\n}\n\nfunction getUniqueInstructors(courses: any[]): string[] {\n  return [...new Set(courses.map(course => course.instructor))]\n}\n\nfunction parseTime(timeStr: string): number {\n  const [hours, minutes] = timeStr.split(':').map(Number)\n  return hours + minutes / 60\n}\n\nfunction getWeeklyScheduleData(courses: any[]) {\n  const days = ['شنبه', 'یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنج‌شنبه']\n  const data = days.map(day => ({\n    day,\n    hours: courses.reduce((total, course) => {\n      return total + course.timeSlots\n        .filter((slot: any) => slot.day === day)\n        .reduce((dayTotal: number, slot: any) => {\n          const start = parseTime(slot.startTime)\n          const end = parseTime(slot.endTime)\n          return dayTotal + (end - start)\n        }, 0)\n    }, 0)\n  }))\n\n  return {\n    labels: data.map(d => d.day),\n    datasets: [{\n      label: 'ساعات کلاس',\n      data: data.map(d => d.hours),\n      backgroundColor: 'rgba(59, 130, 246, 0.5)',\n      borderColor: 'rgba(59, 130, 246, 1)',\n      borderWidth: 1\n    }]\n  }\n}\n\nfunction getCreditsDistribution(courses: any[]) {\n  const creditCounts = courses.reduce((acc, course) => {\n    acc[course.credits] = (acc[course.credits] || 0) + 1\n    return acc\n  }, {} as Record<number, number>)\n\n  return {\n    labels: Object.keys(creditCounts).map(c => `${c} واحد`),\n    datasets: [{\n      data: Object.values(creditCounts),\n      backgroundColor: [\n        'rgba(59, 130, 246, 0.8)',\n        'rgba(16, 185, 129, 0.8)',\n        'rgba(245, 158, 11, 0.8)',\n        'rgba(239, 68, 68, 0.8)',\n        'rgba(139, 92, 246, 0.8)',\n        'rgba(236, 72, 153, 0.8)'\n      ]\n    }]\n  }\n}\n\nexport default Dashboard"
}